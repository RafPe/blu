using System;
using BluApi.Chef.ChefAPI;
using ReturnType = BluApi.Common.Function;

namespace BluStation.BluSprint
{
    public partial class Sprint
    {
        private const string Synopsis = @"<#
═════════════════════════════════════════════════════
This script is automatically generated by Blu
Do not edit it manually, it will be overwitten by the next run.
Copyright 2016, Schuberg Philis
Maintainer: Gitlocker <aahmadi@schubergphilis.com>
All rights reserved.
═════════════════════════════════════════════════════
.SYNOPSIS
This the compiled script created by Start-Sprint CmdLet of BluStation.dll

.DESCRIPTION
It includes all codes compiled from recipes in the run_list
Only cookbooks that supports blu (in metadata: supports 'blu') are converted to PowerShell
#>

# ══════════════════════════
#  Import Blu Assembly
# ══════════════════════════
";

        /// <summary>
        /// Creates and builds header for CompiledScript (BluSprint.ps1)
        /// </summary>
        /// <returns>Multiple type rt (header as rt.Data)</returns>
        public void ImportHeader()
        {
            // Create Copyright header
            SprintPs1Content += Synopsis;

            // Import BluStation assembly into PowerShell namespace
            SprintPs1Content += "[Reflection.Assembly]::LoadFile(\"" +
                ChefConfig.Root + "\\BluStation.dll\") > $null;" + Environment.NewLine;

            // Welcome message (Tesing access to Blu namespace in PowerShell)
            SprintPs1Content += @"[Blu.Method]::Log('ok', 'Welcome to Blu namespace.');" + Environment.NewLine;
            SprintPs1Content += @"[Blu.Method]::Log('ok', 'Starting Sprint ...');" + Environment.NewLine;

        }
    }
}
